openapi: 3.0.3
info:
  title: API ALiVE
  description: |-
    Cette interface est la documentation de l'API ALiVE

  contact:
    email: gaspard.vandecasteele@student.junia.com
  version: "1.0"
externalDocs:
  description: Retrouver le jeu ALiVE
  url: http://exemple.com
servers:
  - url: https://exemple.com
tags:
  - name: object
    description: accès aux objets de ALiVE
  - name: place
    description: accès aux places
  - name: room
    description: accès aux pièces du jeu
  - name: user
    description: Operations about user

paths:
  /api/room:
    get:
      tags:
        - room
      summary: Récupère toutes les pièces
      description: Récupère toutes les pièces
      operationId: getRooms
      responses:
        '200':
          $ref: '#/components/responses/RoomSucces'

        '404':
          description: Aucune pièces trouvées
    post:
      tags:
        - room
      summary: Ajoute une nouvelle pièce
      description: Ajoute une nouvelle pièce dans une place
      operationId: addRoom
      requestBody:
        description: |- 
            Ajout une nouvelle pièce, dans une place, elle même dans une
            map
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/RoomSucces'          

        '400':
          description: Invalid input

components:
  schemas:
  
    Status:
      type: string
      description: le status de la réponse API
      example: success
      enum:
        - success
        - error
    
    Uuid:
      type: object
      properties:
        uuid:
          type: string
    
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          example: 176
        y:
          type: integer
          example: 34
    Room:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: salle de classe
    Place:
      type: object
      properties:
        name:
          type: string
          example: école d'agriculture
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    Map:
      type: object
      properties:
        name:
          type: string
          example: Région nord est
    Day:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Dialogue:
      type: object
      properties:
        description:
          type: string
    Sentence:
      type: object
      properties:
        content: 
          type: string
        color:
          type: string
    Characters:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
    Door:
      type: object
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        
    
  
  responses:
    RoomSucces:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/Status'
              content:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Room'
                    - $ref: '#/components/schemas/Uuid'
  # requestBodies:
  # securitySchemes: